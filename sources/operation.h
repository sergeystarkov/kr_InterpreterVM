#ifndef OPERATION_H
#define OPERATION_H

/**
 * @brief The Operations enum
 *
 * Возможные ОП-коды процессора вирутальной машины
 */
enum Operations {
    STOP    = 0,
    Iadd    = 1,        ///< сложение целых чисел
    Isub    = 2,        ///< вычитание целых чисел
    Imul    = 3,        ///< умножение целых чисел
    Idiv    = 4,        ///< деление целых чисел
    Imod    = 5,        ///< остаток от деления целых чисел
    Icmp    = 6,        ///< Сравнение без записи
    Iin     = 10,       ///< Ввод целого числа
    Iout    = 11,       ///< Вывод целого числа

    Radd    = 21,       ///< сложение дробных чисел
    Rsub    = 22,       ///< вычитание дробных чисел
    Rmul    = 23,       ///< умножение дробных чисел
    Rdiv    = 24,       ///< деление дробных чисел
    Rcmp    = 25,       ///< сравнение без записи
    Rin     = 30,       ///< Ввод вещественного числа
    Rout    = 31,       ///< Вывод вещественного числа

    Load    = 40,       ///< Загрузка сумматора из памяти
    Store   = 50,       ///< Выгрузка сумматра в память

    Radr    = 80,       ///< Загрузка адрессного регистра

    Jmp     = 90,       ///< Безусловный переход
    JZ      = 91,       ///< переход, если ноль (равны)
    JG      = 92,       ///< переход, если больше
    JL      = 93        ///< переход, если меньше
};


/**
 * @brief The Interrupt enum
 *
 * Все возможные коды прерывания
 */
enum Interrupt{
    hIin = 1,          ///< ввод целого числа
    hRin = 2,          ///< ввод вещественного числа

    hIout = 5,         ///< вывод целого числа
    hRout = 6          ///< вывод вещественного числа
};

#endif // OPERATION_H




